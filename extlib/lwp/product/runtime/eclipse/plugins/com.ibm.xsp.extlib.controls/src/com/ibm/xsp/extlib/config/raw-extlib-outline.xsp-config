<?xml version="1.0" encoding="UTF-8"?>
<!-- ******************************************************************* -->
<!--                                                                     -->
<!-- Â© Copyright IBM Corp. 2010, 2012                                    -->
<!--                                                                     -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");     -->
<!-- you may not use this file except in compliance with the License.    -->
<!-- You may obtain a copy of the License at:                            -->
<!--                                                                     -->
<!-- http://www.apache.org/licenses/LICENSE-2.0                          -->
<!--                                                                     -->
<!-- Unless required by applicable law or agreed to in writing, software -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,   -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or     -->
<!-- implied. See the License for the specific language governing        -->
<!-- permissions and limitations under the License.                      -->
<!--                                                                     -->
<!-- ******************************************************************* -->
<faces-config>

	<faces-config-extension>
		<namespace-uri>http://www.ibm.com/xsp/coreex</namespace-uri>
		<default-prefix>xe</default-prefix>
        <designer-extension>
            <control-subpackage-name>outline</control-subpackage-name>
        </designer-extension>
	</faces-config-extension>
	
	<!-- TODO General request - do spell-check on all descriptions (someone) -->

<!-- 
	Outline control 
-->
	<component>
		<description>Base outline control is suitable only for later extension by other similar controls based on outline concept.</description>
		<display-name>Outline Control</display-name>
		<component-type>com.ibm.xsp.extlib.outline.AbstractOutline</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.AbstractOutline</component-class>
    	<group-type-ref>com.ibm.xsp.group.core.prop.style</group-type-ref>
    	<group-type-ref>com.ibm.xsp.group.core.prop.styleClass</group-type-ref>

      	<property>
        	<description>Child nodes. Usually page tree node, more rarely user or login tree nodes or others.</description>
        	<display-name>Child Nodes</display-name>
        	<property-name>treeNodes</property-name>
            <property-class>java.util.List</property-class>
        	<property-extension>
                <allow-run-time-binding>false</allow-run-time-binding>
          		<collection-property>true</collection-property>
          		<property-item-class>com.ibm.xsp.extlib.tree.ITreeNode</property-item-class>
            	<property-add-method>addNode</property-add-method>
				<designer-extension>
                    <category>basics</category>
                </designer-extension>
        	</property-extension>
      	</property>

		<property>
			<description>Event triggered after a click on an item in the outline. Submitted value could be referred to in events.action area as context.getSubmittedValue() and in events.script area as XSP.getSubmitValue().</description>
			<display-name>On Item Click</display-name>
			<property-name>onItemClick</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
				<designer-extension>
					<category>events</category>
					<event>true</event>
					<subcategory>outline</subcategory>
				</designer-extension>
			</property-extension>
		</property>
		
		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<renderer-type>com.ibm.xsp.extlib.outline.OutlineList</renderer-type>
      		<designer-extension>
				<in-palette>true</in-palette>
				<category>Extension Library</category>
      		</designer-extension>
		</component-extension>
	</component>

<!--  
	Page Navigator
-->
	<component>
		<description>Navigator control allows you to make hierarchical tree of page links to navigate to. Particular branch of such tree could be made initially visible, i.e. expanded tree.</description>
		<display-name>Navigator</display-name>
		<component-type>com.ibm.xsp.extlib.outline.OutlineNavigator</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UIOutlineNavigator</component-class>

        <group-type-ref>com.ibm.xsp.extlib.group.aria_label</group-type-ref>
		
  		<property>
  			<!-- # "true" should not be translated -->
			<description>Defines the items should be collapsible and expandable using a twisty. Default is "true".</description>
			<display-name>Expandable</display-name>
			<property-name>expandable</property-name>
			<property-class>boolean</property-class>
			<property-extension>
				<!-- This defaults to false at runtime (server-only property) -->
				<designer-extension>
                    <category>basics</category>
                    <!-- TODO description is wrong - defaults to false, not true -->
                    <tags>
                        todo
                    </tags>
                </designer-extension>
			</property-extension>
		</property>
  		<property>
  		    <!-- # "wipe" should not be translated -->
			<description>Define the UI effect used when expanding or collapsing an item. Use "wipe" for a wiping effects when you are expanding.</description>
			<display-name>Expand Effect</display-name>
			<property-name>expandEffect</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
				<designer-extension>
        	        <category>basics</category>
					<editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
					<editor-parameter>
						wipe
					</editor-parameter>
				</designer-extension>
			</property-extension>
		</property>
  		<property>
  			<!-- # "expandable", "true" should not be translated -->
			<description>Defines the number of levels initially expanded. 0 means showing only parent node, 1 means showing expanded tree up to first level child of each parent nodes and so on. In use only when "expandable" set to "true".</description>
			<display-name>Expanded Levels</display-name>
			<property-name>expandLevel</property-name>
      		<property-class>int</property-class>
			<property-extension>
				<designer-extension>
                    <category>basics</category>
                </designer-extension>
			</property-extension>
		</property>
		
		<property>
			<description>Defines if collapsed or expanded state of items should be saved between server requests</description>
			<display-name>Keep State</display-name>
			<property-name>keepState</property-name>
			<property-class>boolean</property-class>
			<property-extension>
	        	<default-value>false</default-value>
				<!-- Note, the setKeepState method existed in the initial version,
				so leaving since at null wouldn't give runtime NoSuchMethodError's,
				but the renderer didn't use the property in the initial version,
				so the functionality wouldn't work. For that reason, use of
				the keepState property in a post-UP1 Designer will require
				the server/runtime version to be at least 8.5.32001. -->
				<since>8.5.32001</since>
				<designer-extension>
                    <category>basics</category>
                </designer-extension>
			</property-extension>
		</property>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<base-component-type>com.ibm.xsp.extlib.outline.AbstractOutline</base-component-type>
			<renderer-type>com.ibm.xsp.extlib.outline.OutlineMenu</renderer-type>
			<tag-name>navigator</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
      		</designer-extension>
		</component-extension>
	</component>
	
<!--  
	Bread Crumbs
-->
	<component>
		<description>Bread crumbs control is used for indication of a current page location in regards to an application home page</description>
		<display-name>Bread Crumbs</display-name>
		<component-type>com.ibm.xsp.extlib.outline.OutlineBreadCrumbs</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UIOutlineBreadCrumbs</component-class>

        <property>
       		<!-- The issue with label has being discussed with Tony McGuckin on 26.08.2011
       		and renderer was changed accordingly to comply with accessibility. -->
            <description>Text to be displayed by the bread crumb before its entries</description>
            <display-name>Label</display-name>
            <property-name>label</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <localizable>true</localizable>
                <designer-extension>
                    <category>basics</category>
                </designer-extension>
            </property-extension>
        </property>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<base-component-type>com.ibm.xsp.extlib.outline.AbstractOutline</base-component-type>
			<renderer-type>com.ibm.xsp.extlib.outline.BreadCrumbs</renderer-type>
			<tag-name>breadCrumbs</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
                <!-- Usage of " > " separator was discussed with Tony McGuckin on 26.08.2011 and
                it was agreed to leave it as is wrapped with span element -->
      		</designer-extension>
		</component-extension>
	</component>
	
<!--  
	Sort Links
-->
	<component>
		<!-- # "href", "#content=byauthor", "xp:key=byauthor" should not be translated -->
		<description>Sort links control allows you to provide dynamic content associated with a link. Generally it is done via inclusion of a Basic Node where its "href" attribute could be "#content=byauthor" and some facet with "xp:key=byauthor" is provided.</description>
		<display-name>Sort Links</display-name>
		<component-type>com.ibm.xsp.extlib.outline.OutlineSortLinks</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UIOutlineSortLinks</component-class>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<base-component-type>com.ibm.xsp.extlib.outline.AbstractOutline</base-component-type>
			<renderer-type>com.ibm.xsp.extlib.outline.SortLinks</renderer-type>
			<tag-name>sortLinks</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
      		</designer-extension>
		</component-extension>
	</component>
	
<!--  
	Links List
-->
	<component>
		<description>A list of links control</description>
		<display-name>List of Links</display-name>
		<component-type>com.ibm.xsp.extlib.outline.OutlineLinksList</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UIOutlineLinksList</component-class>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<base-component-type>com.ibm.xsp.extlib.outline.AbstractOutline</base-component-type>
			<renderer-type>com.ibm.xsp.extlib.outline.LinksList</renderer-type>
			<tag-name>linksList</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
      		</designer-extension>
		</component-extension>
	</component>
	
<!--  
	Accordion
-->
	<component>
		<description>Accordion control allows you to provide multiple panes and display them one at a time. A single pane is usually formed of a Container Node with several Basic Nodes inside it.</description>
		<display-name>Accordion</display-name>
		<component-type>com.ibm.xsp.extlib.outline.OutlineAccordion</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UIOutlineAccordion</component-class>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<base-component-type>com.ibm.xsp.extlib.outline.AbstractOutline</base-component-type>
			<!-- TODO Override child nodes property to provide description on how to use them inside accordion control -->
			<renderer-type>com.ibm.xsp.extlib.outline.OutlineAccordion</renderer-type>
			<tag-name>accordion</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
      		</designer-extension>
		</component-extension>
	</component>
	
<!--  
	Toolbar
-->
	<component>
		<description>Toolbar control is used to display a horizontally aligned menu with possible choices to be shown when particular menu item is clicked</description>
		<display-name>Toolbar</display-name>
		<component-type>com.ibm.xsp.extlib.outline.OutlineToolbar</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UIOutlineToolbar</component-class>
		
  		<property>
			<description>Display, or not, the label associated to the buttons. Default is to display.</description>
			<display-name>Show Button Labels</display-name>
			<property-name>showButtonLabels</property-name>
			<property-class>boolean</property-class>
			<property-extension>
	        	<default-value>true</default-value>
				<designer-extension>
                    <category>basics</category>
                    <!-- This defaults to true at runtime, so it will only
                    be possible to set the value in a theme file
                    in release 8.5.3 or later using the baseValue attribute.
                    runtime-default-true prevents a fail in BooleanPropertyDefaultTest -->
                    <tags>
                      runtime-default-true
                    </tags>
                </designer-extension>
			</property-extension>
		</property>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<base-component-type>com.ibm.xsp.extlib.outline.AbstractOutline</base-component-type>
			<renderer-type>com.ibm.xsp.extlib.outline.OutlineToolbar</renderer-type>
			<tag-name>toolbar</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
      		</designer-extension>
		</component-extension>
	</component>
	
<!--  
	Popup Menu
-->
	<component>
		<!-- TODO Ask Graham what about DDE UI when we add items here -->
		<!-- # "xe:basicContainerNode", "xe:basicLeafNode", "treeNodes" should not be translated -->
		<description>A pop-up menu to be shown over some text or other controls. Menu content is usually constructed using "xe:basicContainerNode" and "xe:basicLeafNode" elements in "treeNodes" property. Accessibility compatible.</description>
		<display-name>Pop-Up Menu</display-name>
		<component-type>com.ibm.xsp.extlib.outline.OutlinePopupMenu</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UIOutlinePopupMenu</component-class>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<base-component-type>com.ibm.xsp.extlib.outline.AbstractOutline</base-component-type>
			<renderer-type>com.ibm.xsp.extlib.outline.OutlinePopupMenu</renderer-type>
			<tag-name>popupMenu</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
      		</designer-extension>
		</component-extension>
	</component>
	
<!--  
	Generic outline
-->
	<component>
		<!-- # "treeRenderer" should not be translated -->
		<description>Outline control behaves similar to Navigator control without ability to use expanding feature. Allows to specify custom Java class via "treeRenderer" to be used for nodes visualization.</description>
		<display-name>Outline</display-name>
		<component-type>com.ibm.xsp.extlib.outline.OutlineGeneric</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UIOutlineGeneric</component-class>

  		<property>
			<description>Custom Java class to be used for whole tree of nodes visualization</description>
			<display-name>Tree Renderer</display-name>
			<property-name>treeRenderer</property-name>
			<property-class>com.ibm.xsp.extlib.tree.ITreeRenderer</property-class>
			<property-extension>
                 <allow-run-time-binding>false</allow-run-time-binding>
				<designer-extension>
                    <category>basics</category>
                </designer-extension>
			</property-extension>
		</property>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<base-component-type>com.ibm.xsp.extlib.outline.AbstractOutline</base-component-type>
			<renderer-type>com.ibm.xsp.extlib.outline.OutlineList</renderer-type>
			<tag-name>outline</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
      		</designer-extension>
		</component-extension>
	</component>
	
<!--  
	DropDown Button
-->
	<component>
		<!-- TODO check for accessibility, description -->
		<description>A drop-down button control</description>
		<display-name>Drop-Down Button</display-name>
		<component-type>com.ibm.xsp.extlib.outline.OutlineDropDownButton</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UIOutlineDropDownButton</component-class>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<base-component-type>com.ibm.xsp.extlib.outline.AbstractOutline</base-component-type>
			<renderer-type>com.ibm.xsp.extlib.outline.OutlineDropDownButton</renderer-type>
			<tag-name>dropDownButton</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
      		</designer-extension>
		</component-extension>
	</component>
	
<!--  
	Separator
-->
	<component>
		<description>Separator between list entries in a single-line list, where each entry is displayed beside the previous entry, as opposed displaying entries below the previous entry.</description>
		<display-name>List Separator</display-name>
		<component-type>com.ibm.xsp.extlib.outline.Separator</component-type>
		<component-class>com.ibm.xsp.extlib.component.outline.UISeparator</component-class>

		<component-extension>
			<component-family>com.ibm.xsp.extlib.Outline</component-family>
			<renderer-type>com.ibm.xsp.extlib.outline.Separator</renderer-type>
			<tag-name>listSeparator</tag-name>
      		<designer-extension>
        		<in-palette>true</in-palette>
        		<category>Extension Library</category>
        		<!-- This issue has being discussed with Tony McGuckin on 25.08.2011
        		and agreed that for now it should be left that way, i.e. '|' in renderer output.
        		Later during full theme integration for ExtLib controls - that will be properly addressed. -->
				<render-markup>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#xd;
					&lt;xp:view xmlns:xp="http://www.ibm.com/xsp/core"&gt;&#xd;
				    |
					&lt;/xp:view&gt;&#xd;
				</render-markup>
      		</designer-extension>
		</component-extension>
	</component>

<!--  
	TREE NODES
-->
    <complex-type>
        <description>Tree node used when displaying an outline</description>
        <display-name>Abstract Tree Node</display-name>
        <complex-id>com.ibm.xsp.extlib.tree.ITreeNode</complex-id>
        <complex-class>com.ibm.xsp.extlib.tree.ITreeNode</complex-class>
    </complex-type>

	<!-- This is an abstract tree node class defining the basis of a complex tree node -->
	<complex-type>
    	<description>An abstract base class for tree node implementations</description>
    	<display-name>Abstract Leaf Node</display-name>
    	<complex-id>com.ibm.xsp.extlib.tree.complex.BasicComplexTreeNode</complex-id>
    	<complex-class>com.ibm.xsp.extlib.tree.complex.BasicComplexTreeNode</complex-class>
        <group-type-ref>com.ibm.xsp.extlib.group.core_complex.prop.style</group-type-ref>
        <group-type-ref>com.ibm.xsp.extlib.group.core_complex.prop.styleClass</group-type-ref>

  		<property>
			<description>Text displayed by the node</description>
			<display-name>Label</display-name>
			<property-name>label</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
				<localizable>true</localizable>
			</property-extension>
		</property>
  		<property>
			<description>Image being displayed</description>
			<display-name>Image</display-name>
			<property-name>image</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.ImagePicker</editor>
                </designer-extension>
			</property-extension>
		</property>
  		<property>
			<description>Provides alternative information for an image if a user for some reason cannot view it</description>
			<display-name>Image Alternative Information</display-name>
			<property-name>imageAlt</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
				<localizable>true</localizable>
				<designer-extension>
					<tags>
						not-image-path
					</tags>
				</designer-extension>
			</property-extension>
		</property>
  		<property>
			<description>The height of an image being displayed</description>
			<display-name>Image Height</display-name>
			<property-name>imageHeight</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
				<designer-extension>
					<!--  note, this allows values like "30px" or "50%", i.e. not an integer -->
					<!-- xe:applicationConfiguration.legalLogoHeight has a TODO asking
					for a new CSS dimension editor to replace this comboParam -->
					<editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
					<editor-parameter>
						50%
						30px
						10em
						2cm
						auto
						inherit
					</editor-parameter>
					<!-- This is not actually an image path, 
					it just refers to an image in the description, 
					so the tag not-image-path 
					prevents a fail in ImageEditorTest -->
					<tags>
						not-image-path
					</tags>
				</designer-extension>
			</property-extension>
		</property>
  		<property>
			<description>The width of an image being displayed</description>
			<display-name>Image Width</display-name>
			<property-name>imageWidth</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
				<designer-extension>
					<!--  note, this allows values like "30px" or "50%", i.e. not an integer -->
					<!-- xe:applicationConfiguration.legalLogoHeight has a TODO asking
					for a new CSS dimension editor to replace this comboParam -->
					<editor>com.ibm.workplace.designer.property.editors.comboParameterEditor</editor>
					<editor-parameter>
						50%
						30px
						10em
						2cm
						auto
						inherit
					</editor-parameter>
					<!-- This is not actually an image path, 
					it just refers to an image in the description, 
					so the tag not-image-path 
					prevents a fail in ImageEditorTest -->
					<tags>
						not-image-path
					</tags>
				</designer-extension>
			</property-extension>
		</property>
  		<property>
        <!-- Same as the XPages runtime group com.ibm.xsp.group.aria.role
             except that it is not marked as since 8.5.2, and it is not in a control,
             so it does not have a <category> -->
            <description>%/com.ibm.xsp.group.aria.role/role/descr%</description>
            <display-name>%/com.ibm.xsp.group.aria.role/role/name%</display-name>
			<property-name>role</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
			</property-extension>
		</property>
        <property>
            <description>%/com.ibm.xsp.group.core.prop.title/title/descr%</description>
            <display-name>%/com.ibm.xsp.group.core.prop.title/title/name%</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <!-- The property was added after 8.5.3UP1. -->
                <since>8.5.32002</since>
                <localizable>true</localizable>
                <designer-extension>
                    <tags>is-accessibility-title</tags>
                </designer-extension>
            </property-extension>
        </property>
  		<property>
			<description>Indicates in general if the node should be visible in the HTML page.</description>
			<display-name>Rendered</display-name>
			<property-name>rendered</property-name>
			<property-class>boolean</property-class>
			<property-extension>
			</property-extension>
		</property>
  		<property>
			<description>Indicates if the node is enabled. The meaning of disabled depends on whether this node is used, but it may mean that label may be displayed as text instead of a link. Or if the nodes are displayed as buttons, it may mean that the disabled button is gray and does not respond to clicks. Enabled by default.</description>
			<display-name>Enabled</display-name>
			<property-name>enabled</property-name>
			<property-class>boolean</property-class>
			<property-extension>
			</property-extension>
		</property>
  		<property>
			<description>Indicates if the node is selected. Selected nodes appear different to unselected nodes, perhaps with a darker background.</description>
			<display-name>Selected</display-name>
			<property-name>selected</property-name>
			<property-class>boolean</property-class>
			<property-extension>
			</property-extension>
		</property>
		<property>
			<description>Flag indicating that characters in the label that are sensitive in HTML and XML markup must be escaped. This flag is set to "true" by default.</description>
			<display-name>Escape Characters</display-name>
			<property-name>escape</property-name>
			<property-class>boolean</property-class>
			<property-estension>
			</property-estension>
		</property>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.tree.ITreeNode</base-complex-id>
    	</complex-extension>
  	</complex-type>

	<!-- Leaf tree node -->
	<complex-type>
    	<description>Basic node to be included into a container node</description>
    	<display-name>Basic Node</display-name>
    	<complex-id>com.ibm.xsp.extlib.tree.complex.ComplexLeafTreeNode</complex-id>
    	<complex-class>com.ibm.xsp.extlib.tree.complex.ComplexLeafTreeNode</complex-class>

  		<property>
			<description>A URL reference to navigate to. Could be either relative or absolute.</description>
			<display-name>URL Reference</display-name>
			<property-name>href</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
			</property-extension>
		</property>
  		<property>
  		    <!-- # "href" should not be translated -->
			<description>On click event as an inline JavaScript code for a node. It will be invoked only when node is clicked and only when "href" attribute is empty.</description>
			<display-name>Click Script</display-name>
			<property-name>onClick</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
				<designer-extension>
					<editor>com.ibm.designer.domino.client.script.editor</editor>
				</designer-extension>
			</property-extension>
		</property>
  		<property>
  			<!-- # "context.getSubmittedValue()" should not be translated -->
			<description>Value submitted by the event to the server. In an Event Handler for the control, this submitted value can be accessed using "context.getSubmittedValue()". Generally the different nodes will use different submitted values, so the node that was clicked can be identified in the Event Handler script.</description>
			<display-name>Submitted Value</display-name>
			<property-name>submitValue</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
			</property-extension>
		</property>

    	<complex-extension>
			<base-complex-id>com.ibm.xsp.extlib.tree.complex.BasicComplexTreeNode</base-complex-id>
			<tag-name>basicLeafNode</tag-name>
    	</complex-extension>
  	</complex-type>

	<!-- Container tree node -->
	<complex-type>
    	<description>Container node allows inclusion of basic nodes to form list or hierarchy of them</description>
    	<display-name>Container Node</display-name>
    	<complex-id>com.ibm.xsp.extlib.tree.complex.ComplexContainerTreeNode</complex-id>
    	<complex-class>com.ibm.xsp.extlib.tree.complex.ComplexContainerTreeNode</complex-class>

  		<property>
			<description>Indicates if the container is transparent, meaning that it only shows its children not as a node.</description>
			<display-name>Transparent</display-name>
			<property-name>transparent</property-name>
			<property-class>boolean</property-class>
			<property-extension>
			</property-extension>
		</property>
        <property>
            <description>Indicates if the container should be initially expanded. Default is true.</description>
            <display-name>Expanded</display-name>
            <property-name>expanded</property-name>
            <property-class>boolean</property-class>
            <property-extension>
                <default-value>true</default-value>
                <since>8.5.32005</since>
            </property-extension>
        </property>
      	<property>
        	<description>Child nodes, displayed under this node in the page</description>
        	<display-name>Children</display-name>
        	<property-name>children</property-name>
            <property-class>java.util.List</property-class>
        	<property-extension>
                <allow-run-time-binding>false</allow-run-time-binding>
          		<collection-property>true</collection-property>
          		<property-item-class>com.ibm.xsp.extlib.tree.ITreeNode</property-item-class>
            	<property-add-method>addChild</property-add-method>
        	</property-extension>
      	</property>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.tree.complex.ComplexLeafTreeNode</base-complex-id>
            <default-property>children</default-property>
      		<tag-name>basicContainerNode</tag-name>
    	</complex-extension>
  	</complex-type>


	<!-- Page tree node -->
	<complex-type>
    	<description>A node that points to a page and manages the selected flag</description>
    	<display-name>Page Link Node</display-name>
    	<complex-id>com.ibm.xsp.extlib.tree.complex.PageTreeNode</complex-id>
    	<complex-class>com.ibm.xsp.extlib.tree.complex.PageTreeNode</complex-class>

  		<property>
			<description>Defines the name of the XPage to link to. Used to generate the link and to set the selection flag, if no selection formula is provided.</description>
			<display-name>Page Name</display-name>
			<property-name>page</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.PagePicker</editor>
                </designer-extension>
			</property-extension>
		</property>
  		<property>
			<description>Defines optional query text that will be appended to the URL</description>
			<display-name>Query Text</display-name>
			<property-name>queryString</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
			</property-extension>
		</property>
  		<property>
			<description>Selection regular expression used to select this item. This is often used to match against the value of the Application Configuration "navigationPath" property; see that property for more details.</description>
			<display-name>Selection Regular Expression</display-name>
			<property-name>selection</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
				<designer-extension>
					<editor>com.ibm.xsp.extlib.designer.tooling.editor.RegularExpressionEditor</editor>
				</designer-extension>
			</property-extension>
		</property>
      	<property>
        	<description>Child nodes. Usually page tree node, more rarely user or login tree nodes or others.</description>
        	<display-name>Child Nodes</display-name>
        	<property-name>children</property-name>
            <property-class>java.util.List</property-class>
        	<property-extension>
                <allow-run-time-binding>false</allow-run-time-binding>
          		<collection-property>true</collection-property>
          		<property-item-class>com.ibm.xsp.extlib.tree.ITreeNode</property-item-class>
            	<property-add-method>addChild</property-add-method>
        	</property-extension>
      	</property>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.tree.complex.BasicComplexTreeNode</base-complex-id>
      		<tag-name>pageTreeNode</tag-name>
    	</complex-extension>
  	</complex-type>

	<!-- Separator tree node -->
	<complex-type>
	   <!-- TODO If CSS support will be done, then update description -->
    	<description>A node that displays a separator, often looking like the character "|"</description>
    	<display-name>Separator Node</display-name>
    	<complex-id>com.ibm.xsp.extlib.tree.complex.SeparatorTreeNode</complex-id>
    	<complex-class>com.ibm.xsp.extlib.tree.complex.SeparatorTreeNode</complex-class>
        <group-type-ref>com.ibm.xsp.extlib.group.core_complex.prop.style</group-type-ref>
        <group-type-ref>com.ibm.xsp.extlib.group.core_complex.prop.styleClass</group-type-ref>

  		<property>
			<description>Indicates if the node should be rendered</description>
			<display-name>Rendered</display-name>
			<property-name>rendered</property-name>
			<property-class>boolean</property-class>
			<property-extension>
			</property-extension>
		</property>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.tree.ITreeNode</base-complex-id>
      		<tag-name>separatorTreeNode</tag-name>
    	</complex-extension>
  	</complex-type>

	<!-- Current user tree node -->
	<complex-type>
    	<description>A node that displays the current user</description>
    	<display-name>User Node</display-name>
    	<complex-id>com.ibm.xsp.extlib.tree.complex.UserTreeNode</complex-id>
    	<complex-class>com.ibm.xsp.extlib.tree.complex.UserTreeNode</complex-class>

  		<property>
  			<!-- # "displayName", "commonName", "abbreviatedName", "canonicalName" should not be translated -->
			<description>Used to display user data, depends on configured user data provider. If left blank then "displayName" user field of data provider will be used. For the Domino data provider you could use "commonName", "abbreviatedName" or "canonicalName" for the various user name formats.</description>
			<display-name>User Field</display-name>
			<property-name>userField</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
			</property-extension>
		</property>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.tree.complex.BasicComplexTreeNode</base-complex-id>
      		<tag-name>userTreeNode</tag-name>
    	</complex-extension>
  	</complex-type>

	<!-- Repeated tree node -->
	<complex-type>
    	<description>A node which repeats its children against a list of values, similar to the repeat control</description>
    	<display-name>Repeat Node</display-name>
    	<complex-id>com.ibm.xsp.extlib.tree.complex.RepeatTreeNode</complex-id>
    	<complex-class>com.ibm.xsp.extlib.tree.complex.RepeatTreeNode</complex-class>
		<property>
			<description>Value up to which items will be repeated</description>
			<display-name>Value to Repeat</display-name>
			<property-name>value</property-name>
      		<property-class>java.lang.Object</property-class>
      		<property-extension>
        		<designer-extension>
        		</designer-extension>
      		</property-extension>
		</property>
    	<property>
      		<description>Request scope variable name under which the current object will be made available</description>
      		<display-name>Var</display-name>
      		<property-name>var</property-name>
      		<property-class>java.lang.String</property-class>
      		<property-extension>
	    		<allow-run-time-binding>false</allow-run-time-binding>
				<designer-extension>
					<editor>com.ibm.xsp.extlib.designer.tooling.editor.VarNameEditor</editor>
				</designer-extension>
      		</property-extension>
    	</property>
    	<property>
      		<description>Request scope variable name under which the current repeat index will be made available</description>
      		<display-name>Index Var</display-name>
      		<property-name>indexVar</property-name>
      		<property-class>java.lang.String</property-class>
      		<property-extension>
	    		<allow-run-time-binding>false</allow-run-time-binding>
				<designer-extension>
					<editor>com.ibm.xsp.extlib.designer.tooling.editor.VarNameEditor</editor>
				</designer-extension>
      		</property-extension>
    	</property>
      	<property>
        	<description>Child nodes to repeat</description>
        	<display-name>Children</display-name>
        	<property-name>children</property-name>
            <property-class>java.util.List</property-class>
        	<property-extension>
                <allow-run-time-binding>false</allow-run-time-binding>
          		<collection-property>true</collection-property>
          		<property-item-class>com.ibm.xsp.extlib.tree.ITreeNode</property-item-class>
            	<property-add-method>addChild</property-add-method>
        	</property-extension>
      	</property>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.tree.ITreeNode</base-complex-id>
      		<tag-name>repeatTreeNode</tag-name>
    	</complex-extension>
  	</complex-type>

	<!-- Bean tree node -->
	<complex-type>
    	<description>A node which usually uses custom Java class as a bean for its content</description>
    	<display-name>Managed Bean Node</display-name>
    	<complex-id>com.ibm.xsp.extlib.tree.complex.BeanTreeNode</complex-id>
    	<complex-class>com.ibm.xsp.extlib.tree.complex.BeanTreeNode</complex-class>

  		<property>
			<description>Name of a class or a managed bean, used to provide the actual tree node or tree node list. The class should implement the ITreeNode interface.</description>
			<display-name>Tree Node Bean</display-name>
			<property-name>nodeBean</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
			</property-extension>
		</property>

    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.tree.ITreeNode</base-complex-id>
      		<tag-name>beanTreeNode</tag-name>
    	</complex-extension>
  	</complex-type>


<!--  
	TREE RENDERER
-->
    <complex-type>
        <description>Custom Java class to be used for tree (whole or subpart) of nodes visualization</description>
        <display-name>Tree Renderer</display-name>
        <complex-id>com.ibm.xsp.extlib.tree.ITreeRenderer</complex-id>
        <complex-class>com.ibm.xsp.extlib.tree.ITreeRenderer</complex-class>
        <complex-extension>
        </complex-extension>
    </complex-type>
    
	<!-- Abstract HTML tags -->
	<complex-type>
    	<description>Abstract class for HTML tags</description>
    	<display-name>Abstract HTML Tags</display-name>
    	<complex-id>com.ibm.xsp.extlib.renderkit.html_extended.outline.tree.HtmlTagsRenderer</complex-id>
    	<complex-class>com.ibm.xsp.extlib.renderkit.html_extended.outline.tree.HtmlTagsRenderer</complex-class>
  		<property>
			<description>HTML style attribute for the container</description>
			<display-name>Container Style</display-name>
			<property-name>containerStyle</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.StylesEditor</editor>
                </designer-extension>
			</property-extension>
		</property>
  		<property>
			<description>HTML class attribute for the container</description>
			<display-name>Container Style Class</display-name>
			<property-name>containerStyleClass</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
	      		<designer-extension>          	 
	          		<editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
	      		</designer-extension>   
			</property-extension>
		</property>
  		<property>
			<description>HTML style attribute for the item</description>
			<display-name>Item Style</display-name>
			<property-name>itemStyle</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.StylesEditor</editor>
                </designer-extension>
			</property-extension>
		</property>
  		<property>
			<description>HTML class attribute for the item</description>
			<display-name>Item Style Class</display-name>
			<property-name>itemStyleClass</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
	      		<designer-extension>          	 
	          		<editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
	      		</designer-extension>   
			</property-extension>
		</property>
  		<property>
			<description>HTML style attribute for the selected item</description>
			<display-name>Selected Item Style</display-name>
			<property-name>selectedItemStyle</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.StylesEditor</editor>
                </designer-extension>
			</property-extension>
		</property>
  		<property>
			<description>HTML class attribute for the selected item</description>
			<display-name>Selected Item Style Class</display-name>
			<property-name>selectedItemStyleClass</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
	      		<designer-extension>          	 
	          		<editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
	      		</designer-extension>   
			</property-extension>
		</property>
  		<property>
			<description>HTML style attribute for the disabled item</description>
			<display-name>Disabled Item Style</display-name>
			<property-name>disabledItemStyle</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
                <designer-extension>
                    <editor>com.ibm.workplace.designer.property.editors.StylesEditor</editor>
                </designer-extension>
			</property-extension>
		</property>
  		<property>
			<description>HTML class attribute for the disabled item</description>
			<display-name>Disabled Item Style Class</display-name>
			<property-name>disabledItemStyleClass</property-name>
			<property-class>java.lang.String</property-class>
			<property-extension>
	      		<designer-extension>          	 
	          		<editor>com.ibm.workplace.designer.property.editors.StyleClassEditor</editor>
	      		</designer-extension>   
			</property-extension>
		</property>
    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.tree.ITreeRenderer</base-complex-id>
    	</complex-extension>
  	</complex-type>
    
	<!-- HTML List -->
	<complex-type>
		<!-- # "ul", "li" should not be translated -->
    	<description>A control that formats a HTML list in form of "ul" and "li" tags. Generally used for a Generic Outline control to apply those tags to its nodes.</description>
    	<display-name>HTML List Formatter</display-name>
    	<complex-id>com.ibm.xsp.extlib.renderkit.html_extended.outline.tree.HtmlListRenderer</complex-id>
    	<complex-class>com.ibm.xsp.extlib.renderkit.html_extended.outline.tree.HtmlListRenderer</complex-class>
    	<complex-extension>
			<!-- TODO Package name should be in form of com.ibm.xsp.extlib.tree.format -->
    		<base-complex-id>com.ibm.xsp.extlib.renderkit.html_extended.outline.tree.HtmlTagsRenderer</base-complex-id>
      		<tag-name>htmlListRenderer</tag-name>
    	</complex-extension>
  	</complex-type>

	<!-- HTML DivSpan -->
	<complex-type>
		<!-- # "div", "span" should not be translated -->
    	<description>A control that formats a HTML fragment in form of "div" and "span" tags. Generally used for a Generic Outline control to apply those tags to its nodes.</description>
    	<display-name>HTML Div and Span Formatter</display-name>
    	<complex-id>com.ibm.xsp.extlib.renderkit.html_extended.outline.tree.HtmlDivSpanRenderer</complex-id>
    	<complex-class>com.ibm.xsp.extlib.renderkit.html_extended.outline.tree.HtmlDivSpanRenderer</complex-class>
    	<complex-extension>
    		<base-complex-id>com.ibm.xsp.extlib.renderkit.html_extended.outline.tree.HtmlTagsRenderer</base-complex-id>
      		<tag-name>htmlDivSpanRenderer</tag-name>
    	</complex-extension>
  	</complex-type>

</faces-config>
